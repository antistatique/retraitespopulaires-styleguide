<?php

function retraitespopulaires_theme_suggestions_page_alter(array &$suggestions, array $variables) {
    $state = \Drupal::state();

    $route_match = \Drupal::routeMatch();
    $node = $route_match->getParameter('node');

    if (isset($node->nid->value)
        && (
            $node->nid->value == $state->get('rp_site.settings.collection.profil_individual')['nid']
            || $node->nid->value == $state->get('rp_site.settings.collection.profil_company')['nid']
            || $node->nid->value == $state->get('rp_site.settings.collection.profil_public')['nid']
        )
    ) {
        $suggestions[] = 'page__node__profils';
    }

    if (isset($node->nid->value) && $node->getType() == 'news') {
        $suggestions[] = 'page__node__news';
    }

    if (isset($node->nid->value) && ($node->getType() == 'advisor' || $node->getType() == 'contact')) {
        $suggestions[] = 'page__node__contact';
    }

    if (isset($node->nid->value) && $node->nid->value == $state->get('rp_site.settings.collection.news')['nid']) {
        $suggestions[] = 'page__node__'.$state->get('rp_site.settings.collection.news')['theme'];
    }

    if (isset($node->nid->value) && $node->getType() == 'offer') {
        $suggestions[] = 'page__node__offer';
    }
}

function retraitespopulaires_theme_suggestions_node_alter(array &$suggestions, array $variables) {
    $state = \Drupal::state();

    if (isset($variables['elements']['#node']->nid->value) &&
        $variables['elements']['#node']->nid->value == $state->get('rp_site.settings.collection.news')['nid']) {
        $suggestions[] = 'node__' . $state->get('rp_site.settings.collection.news')['theme'];
    }

    if (isset($variables['elements']['#node']->nid->value) &&
        $variables['elements']['#node']->nid->value == $state->get('rp_site.settings.collection.profil_individual')['nid']) {
        $suggestions[] = 'node__' . $state->get('rp_site.settings.collection.profil_individual')['theme'];
    }

    if (isset($variables['elements']['#node']->nid->value) &&
        $variables['elements']['#node']->nid->value == $state->get('rp_site.settings.collection.profil_company')['nid']) {
        $suggestions[] = 'node__' . $state->get('rp_site.settings.collection.profil_company')['theme'];
    }

    if (isset($variables['elements']['#node']->nid->value) &&
        $variables['elements']['#node']->nid->value == $state->get('rp_site.settings.collection.profil_public')['nid']) {
        $suggestions[] = 'node__' . $state->get('rp_site.settings.collection.profil_public')['theme'];
    }
}

function var_debug($variable, $depth=10, $strlen=100, $width=25, $i=0, &$objects = array()) {
$search = array("", "a", "", "", "
", "
", "	", "");
$replace = array('', 'a', '', '', '
', '
', '	', '');

$string = '';

switch(gettype($variable)) {
  case 'boolean':      $string.= $variable?'true':'false'; break;
  case 'integer':      $string.= $variable;                break;
  case 'double':       $string.= $variable;                break;
  case 'resource':     $string.= '[resource]';             break;
  case 'NULL':         $string.= "null";                   break;
  case 'unknown type': $string.= '???';                    break;
  case 'string':
    $len = strlen($variable);
    $variable = str_replace($search,$replace,substr($variable,0,$strlen),$count);
    $variable = substr($variable,0,$strlen);
    if ($len<$strlen) $string.= '"'.$variable.'"';
    else $string.= 'string('.$len.'): "'.$variable.'"...';
    break;
  case 'array':
    $len = count($variable);
    if ($i==$depth) $string.= 'array('.$len.') {...}';
    elseif(!$len) $string.= 'array(0) {}';
    else {
      $keys = array_keys($variable);
      $spaces = str_repeat(' ',$i*2);
      $string.= "array($len)
".$spaces.'{';
      $count=0;
      foreach($keys as $key) {
        if ($count==$width) {
          $string.= "
".$spaces."  ...";
          break;
        }
        $string.= "
".$spaces."  [$key] => ";
        $string.= var_debug($variable[$key],$strlen,$width,$depth,$i+1,$objects);
        $count++;
      }
      $string.="
".$spaces.'}';
    }
    break;
  case 'object':
    $id = array_search($variable,$objects,true);
    if ($id!==false)
      $string.=get_class($variable).'#'.($id+1).' {...}';
    else if($i==$depth)
      $string.=get_class($variable).' {...}';
    else {
      $id = array_push($objects,$variable);
      $array = (array)$variable;
      $spaces = str_repeat(' ',$i*2);
      $string.= get_class($variable)."#$id
".$spaces.'{';
      $properties = array_keys($array);
      foreach($properties as $property) {
        $name = str_replace("",':',trim($property));
        $string.= "
".$spaces."  [$name] => ";
        $string.= var_debug($array[$property],$strlen,$width,$depth,$i+1,$objects);
      }
      $string.= "
".$spaces.'}';
    }
    break;
}

if ($i>0) return $string;

$backtrace = debug_backtrace(DEBUG_BACKTRACE_IGNORE_ARGS);
do $caller = array_shift($backtrace); while ($caller && !isset($caller['file']));
if ($caller) $string = $caller['file'].':'.$caller['line']."
".$string;

echo $string;
}
