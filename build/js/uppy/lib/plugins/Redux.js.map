{"version":3,"sources":["../../src/plugins/Redux.js"],"names":["Plugin","require","module","exports","uppy","opts","type","id","title","action","Error","dispatch","handleStateUpdate","bind","prev","state","patch","install","on","uninstall","off"],"mappings":";;;;;;;;AAAA,IAAMA,SAASC,QAAQ,gBAAR,CAAf;;AAEAC,OAAOC,OAAP;AAAA;;AACE,iBAAaC,IAAb,EAAmBC,IAAnB,EAAyB;AAAA;;AAAA,iDACvB,mBAAMD,IAAN,EAAYC,IAAZ,CADuB;;AAEvB,UAAKC,IAAL,GAAY,YAAZ;AACA,UAAKC,EAAL,GAAU,OAAV;AACA,UAAKC,KAAL,GAAa,eAAb;;AAEA,QAAI,OAAOH,KAAKI,MAAZ,KAAuB,WAA3B,EAAwC;AACtC,YAAM,IAAIC,KAAJ,CAAU,8BAAV,CAAN;AACD;AACD,QAAI,OAAOL,KAAKM,QAAZ,KAAyB,WAA7B,EAA0C;AACxC,YAAM,IAAID,KAAJ,CAAU,gCAAV,CAAN;AACD;AACD,UAAKL,IAAL,GAAYA,IAAZ;;AAEA,UAAKO,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,OAAzB;AAduB;AAexB;;AAhBH,kBAkBED,iBAlBF,8BAkBqBE,IAlBrB,EAkB2BC,KAlB3B,EAkBkCC,KAlBlC,EAkByC;AACrC,SAAKX,IAAL,CAAUM,QAAV,CAAmB,KAAKN,IAAL,CAAUI,MAAV,CAAiBK,IAAjB,EAAuBC,KAAvB,EAA8BC,KAA9B,CAAnB,EADqC,CACoB;AAC1D,GApBH;;AAAA,kBAsBEC,OAtBF,sBAsBa;AACT,SAAKb,IAAL,CAAUc,EAAV,CAAa,cAAb,EAA6B,KAAKN,iBAAlC;AACA,SAAKA,iBAAL,CAAuB,EAAvB,EAA2B,KAAKR,IAAL,CAAUW,KAArC,EAA4C,KAAKX,IAAL,CAAUW,KAAtD,EAFS,CAEoD;AAC9D,GAzBH;;AAAA,kBA2BEI,SA3BF,wBA2Be;AACX,SAAKf,IAAL,CAAUgB,GAAV,CAAc,cAAd,EAA8B,KAAKR,iBAAnC;AACD,GA7BH;;AAAA;AAAA,EAAqCZ,MAArC","file":"Redux.js","sourcesContent":["const Plugin = require('../core/Plugin')\n\nmodule.exports = class Redux extends Plugin {\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.type = 'state-sync'\n    this.id = 'Redux'\n    this.title = 'Redux Emitter'\n\n    if (typeof opts.action === 'undefined') {\n      throw new Error('action option is not defined')\n    }\n    if (typeof opts.dispatch === 'undefined') {\n      throw new Error('dispatch option is not defined')\n    }\n    this.opts = opts\n\n    this.handleStateUpdate = this.handleStateUpdate.bind(this)\n  }\n\n  handleStateUpdate (prev, state, patch) {\n    this.opts.dispatch(this.opts.action(prev, state, patch)) // this dispatches a redux event with the new state\n  }\n\n  install () {\n    this.uppy.on('state-update', this.handleStateUpdate)\n    this.handleStateUpdate({}, this.uppy.state, this.uppy.state) // set the initial redux state\n  }\n\n  uninstall () {\n    this.uppy.off('state-update', this.handleStateUpdate)\n  }\n}\n"]}