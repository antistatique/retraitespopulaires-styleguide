Index: core/modules/locale/locale.module
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/modules/locale/locale.module	(revision 3c7598c85d434e6f1b5c9433fa211711d9b9b3d3)
+++ core/modules/locale/locale.module	(revision )
@@ -1131,22 +1131,24 @@
  *   If a non-local file is attempted to be parsed.
  */
 function _locale_parse_js_file($filepath) {
+  // Check if file exists first before we do anything to prevent error
+  if(file_exists($filepath)){
-  // The file path might contain a query string, so make sure we only use the
-  // actual file.
-  $parsed_url = UrlHelper::parse($filepath);
-  $filepath = $parsed_url['path'];
+    // The file path might contain a query string, so make sure we only use the
+    // actual file.
+    $parsed_url = UrlHelper::parse($filepath);
+    $filepath = $parsed_url['path'];

-  // If there is still a protocol component in the path, reject that.
-  if (strpos($filepath, ':')) {
-    throw new Exception('Only local files should be passed to _locale_parse_js_file().');
-  }
+    // If there is still a protocol component in the path, reject that.
+    if (strpos($filepath, ':')) {
+      throw new Exception('Only local files should be passed to _locale_parse_js_file().');
+    }

-  // Load the JavaScript file.
-  $file = file_get_contents($filepath);
+    // Load the JavaScript file.
+    $file = file_get_contents($filepath);

-  // Match all calls to Drupal.t() in an array.
-  // Note: \s also matches newlines with the 's' modifier.
-  preg_match_all('~
+    // Match all calls to Drupal.t() in an array.
+    // Note: \s also matches newlines with the 's' modifier.
+    preg_match_all('~
     [^\w]Drupal\s*\.\s*t\s*                       # match "Drupal.t" with whitespace
     \(\s*                                         # match "(" argument list start
     (' . LOCALE_JS_STRING . ')\s*                 # capture string argument
@@ -1156,8 +1158,8 @@
     [,\)]                                         # match ")" or "," to finish
     ~sx', $file, $t_matches);

-  // Match all Drupal.formatPlural() calls in another array.
-  preg_match_all('~
+    // Match all Drupal.formatPlural() calls in another array.
+    preg_match_all('~
     [^\w]Drupal\s*\.\s*formatPlural\s*  # match "Drupal.formatPlural" with whitespace
     \(                                  # match "(" argument list start
     \s*.+?\s*,\s*                       # match count argument
@@ -1186,37 +1188,38 @@
     [,\)]
     ~sx', $file, $plural_matches);

-  $matches = array();
+    $matches = array();

-  // Add strings from Drupal.t().
-  foreach ($t_matches[1] as $key => $string) {
-    $matches[] = array(
-      'source'  => _locale_strip_quotes($string),
-      'context' => _locale_strip_quotes($t_matches[2][$key]),
-    );
-  }
+    // Add strings from Drupal.t().
+    foreach ($t_matches[1] as $key => $string) {
+      $matches[] = array(
+        'source'  => _locale_strip_quotes($string),
+        'context' => _locale_strip_quotes($t_matches[2][$key]),
+      );
+    }

-  // Add string from Drupal.formatPlural().
-  foreach ($plural_matches[1] as $key => $string) {
-    $matches[] = array(
-      'source'  => _locale_strip_quotes($string) . LOCALE_PLURAL_DELIMITER . _locale_strip_quotes($plural_matches[2][$key]),
-      'context' => _locale_strip_quotes($plural_matches[3][$key]),
-    );
-  }
+    // Add string from Drupal.formatPlural().
+    foreach ($plural_matches[1] as $key => $string) {
+      $matches[] = array(
+        'source'  => _locale_strip_quotes($string) . LOCALE_PLURAL_DELIMITER . _locale_strip_quotes($plural_matches[2][$key]),
+        'context' => _locale_strip_quotes($plural_matches[3][$key]),
+      );
+    }

-  // Loop through all matches and process them.
-  foreach ($matches as $match) {
-    $source = \Drupal::service('locale.storage')->findString($match);
+    // Loop through all matches and process them.
+    foreach ($matches as $match) {
+      $source = \Drupal::service('locale.storage')->findString($match);

-    if (!$source) {
-      // We don't have the source string yet, thus we insert it into the
-      // database.
-      $source = \Drupal::service('locale.storage')->createString($match);
-    }
+      if (!$source) {
+        // We don't have the source string yet, thus we insert it into the
+        // database.
+        $source = \Drupal::service('locale.storage')->createString($match);
+      }

-    // Besides adding the location this will tag it for current version.
-    $source->addLocation('javascript', $filepath);
-    $source->save();
+      // Besides adding the location this will tag it for current version.
+      $source->addLocation('javascript', $filepath);
+      $source->save();
+    }
   }
 }
